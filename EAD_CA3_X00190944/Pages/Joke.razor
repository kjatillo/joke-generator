@page "/"

@inject HttpClient Http
@inject ILogger<Joke> Logger

<PageTitle>Joke Generator | X00190944</PageTitle>

<div class="container border border-success rounded p-5 my-md-3" id="main">
	<img src="images/pepe_ok.png"
		 alt="Pepe Meme"
		 class="d-block mx-auto bg-success"
		 style="height: 75px;" />

	<h1 class="text-center mb-5 display-4 text-success">Joke Generator</h1>

	<div class="container w-75">
		<!-- Category Checkbox -->
		<div class="mb-3">
			<h6>Select Categories</h6>
			<div class="d-flex flex-wrap gap-3 flex-column flex-md-row">
				@foreach (Category category in Enum.GetValues(typeof(Category)))
				{
					if (category != Category.Any)
					{
						<div class="form-check form-check-inline">
							<input class="form-check-input"
								   type="checkbox"
								   @bind="selectedCategories[category]" />
							<label class="form-check-label">@category</label>
						</div>
					}
				}
			</div>
		</div>

		<!-- Language Dropdown -->
		<div class="mb-3">
			<h6>Select Language</h6>
			<div class="row">
				<div class="col-12 col-md-6">
					<select class="form-select" @bind="selectedLanguage">
						@foreach (Language language in Enum.GetValues(typeof(Language)))
						{
							<option value="@language">
								@UtilityMethods.GetLanguageDisplayName(language)
							</option>
						}
					</select>
				</div>
			</div>
		</div>

		<!-- Joke Type Dropdown -->
		<div class="mb-3">
			<h6>Select Type</h6>
			<div class="row">
				<div class="col-12 col-md-6">
					<select class="form-select" @bind="selectedJokeType">
						@foreach (JokeType jokeType in Enum.GetValues(typeof(JokeType)))
						{
							<option value="@jokeType">@jokeType</option>
						}
					</select>
				</div>
			</div>
		</div>

		<!-- Search Bar -->
		<div class="mb-3">
			<h6>Search</h6>
			<div class="row">
				<div class="col-12 col-md-6">
					<input class="form-control"
						   type="text"
						   placeholder="Enter search term(s)"
						   @bind="searchQuery"
						   @onkeydown="@(async e =>
							await UtilityMethods
									.TriggerGenerateJoke(e, GenerateJokeAsync))" />
				</div>
			</div>
		</div>

		<!-- Quantity -->
		<div class="mb-3">
			<h6>Quantity</h6>
			<div class="row">
				<div class="col-12 col-md-3">
					<input class="form-control"
						   type="number"
						   @bind="quantity"
						   min="@MIN_QTY"
						   max="@MAX_QTY" />
				</div>
			</div>
		</div>

		<!-- Generate Joke Button -->
		<div class="d-grid gap-2 d-md-block">
			<button class="btn btn-success me-md-2" @onclick="GenerateJokeAsync">
				Generate Joke
			</button>

			<button class="btn btn-secondary" @onclick="ClearForm">
				Clear Form
			</button>
		</div>

		<!-- Joke Output with QuickGrid -->
		@if (jokes.Any())
		{
			<hr class="mt-4 mb-2" />

			<div class="table-responsive">
				<QuickGrid Items="jokes.AsQueryable()"
						   Pagination="@pagination"
						   class="table table-striped table-hover">
					<PropertyColumn Property="@(j => j.Category)"
									Title="Category"
									Sortable="true" />
					<PropertyColumn Property="@(j => j.Type)"
									Title="Type"
									Sortable="true" />
					<PropertyColumn Property="@(j =>
										j.Type == JokeType.TwoPart.ToString().ToLower() ?
													$"{j.Setup} - {j.Delivery}" : j.Joke)"
									Title="Joke"
									Sortable="true" />
				</QuickGrid>
			</div>

			<Paginator State="@pagination" />
		}
		else if (noJokesFound)
		{
			<div class="text-center mt-4">
				<img src="images/pepe_sad.jpg"
					 alt="No Jokes Found"
					 class="d-block mx-auto"
					 style="height: 125px;" />

				<p class="alert alert-warning">Sorry, no jokes found</p>
			</div>
		}
	</div>
</div>

<!-- Footer Section -->
<footer class="bg-light text-center mt-5">
	<div class="container p-4">
		<p class="mb-3 text-center">© 2024 Technological University Dublin</p>

		<div class="row justify-content-center mb-1">
			<div class="col-lg-6 col-md-12 mb-2 mb-md-0 pe-0 ps-3">
				<a href="https://www.linkedin.com/in/keneithatillo" target="_blank" class="me-3">
					<i class="fab fa-linkedin fa-2x text-dark" style="transition: color 0.3s;"></i>
				</a>

				<a href="https://www.instagram.com" target="_blank" class="me-3">
					<i class="fab fa-instagram fa-2x text-dark" style="transition: color 0.3s;"></i>
				</a>

				<a href="https://github.com/kjatillo" target="_blank" class="me-3">
					<i class="fab fa-github fa-2x text-dark" style="transition: color 0.3s;"></i>
				</a>
			</div>
		</div>

		<p class="mb-1 text-center">Developed by Ken</p>
		<p class="mb-1 text-center">Computing with Software Development</p>
	</div>
</footer>
